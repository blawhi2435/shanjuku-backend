// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package internal

import (
	"github.com/blawhi2435/shanjuku-backend/graph/resolver"
	usecase2 "github.com/blawhi2435/shanjuku-backend/internal/app/auth/usecase"
	"github.com/blawhi2435/shanjuku-backend/internal/app/user/repository/postgres"
	"github.com/blawhi2435/shanjuku-backend/internal/app/user/usecase"
	"github.com/blawhi2435/shanjuku-backend/internal/service"
	"github.com/google/wire"
	"gorm.io/gorm"
)

// Injectors from wire.go:

func InitResolver(db *gorm.DB, logger *service.LoggerService) *resolver.Resolver {
	userPostgreRepository := postgres.ProvideUserPostgresRepository(db)
	userUsecase := usecase.ProvideUserUsecase(userPostgreRepository)
	authUsecase := usecase2.ProvideAuthUsecase(userPostgreRepository, userUsecase)
	resolverResolver := resolver.ProvideResolver(logger, authUsecase, userUsecase)
	return resolverResolver
}

// wire.go:

var resolverSet = wire.NewSet(resolver.ProvideResolver)

var usecaseSet = wire.NewSet(postgres.ProvideUserPostgresRepository, usecase.ProvideUserUsecase, usecase2.ProvideAuthUsecase)
